{
  "swagger": "2.0",
  "info": {
    "description": "Questionnaire Service API Documentation",
    "version": "1.0.0",
    "title": "Questionnaire Service API",
    "contact": {
      "email": "admin@example.com"
    }
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "users",
      "description": "User management operations (admin only)"
    },
    {
      "name": "surveys",
      "description": "Survey operations"
    },
    {
      "name": "answers",
      "description": "Answer operations"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Authorization: \"Bearer {token}\""
    }
  },
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Obtain JWT tokens",
        "description": "Authenticates a user and issues JWT tokens.",
        "operationId": "getToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "username",
                "password"
              ],
              "properties": {
                "username": {
                  "type": "string",
                  "example": "test_user"
                },
                "password": {
                  "type": "string",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                },
                "user_id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                },
                "is_admin": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/verify_token": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Verify JWT token",
        "description": "Tests if your JWT token is valid and returns information about it.",
        "operationId": "verifyToken",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token verification successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "identity": {
                  "type": "string"
                },
                "claims": {
                  "type": "object"
                },
                "authorization_header": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid token"
          },
          "422": {
            "description": "Token format error"
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh access token",
        "description": "Uses a refresh token to obtain a new access token.",
        "operationId": "refreshToken",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "description": "Returns a list of all users (admin only).",
        "operationId": "getUsers",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "403": {
            "description": "Admin access required"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by ID",
        "description": "Returns a user by ID (admin only).",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "description": "Updates a user by ID (admin only).",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "is_admin": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "Deletes a user by ID (admin only).",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "403": {
            "description": "Admin access required"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/surveys": {
      "get": {
        "tags": [
          "surveys"
        ],
        "summary": "Get all surveys",
        "description": "Returns a list of all surveys.",
        "operationId": "getSurveys",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SurveySummary"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "surveys"
        ],
        "summary": "Create a new survey",
        "description": "Creates a new survey.",
        "operationId": "createSurvey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Survey data",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Customer Satisfaction Survey"
                },
                "description": {
                  "type": "string",
                  "example": "Help us improve our services."
                },
                "is_active": {
                  "type": "boolean",
                  "default": true
                },
                "require_login": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Survey created successfully",
            "schema": {
              "$ref": "#/definitions/SurveySummary"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/surveys/{id}": {
      "get": {
        "tags": [
          "surveys"
        ],
        "summary": "Get survey by ID",
        "description": "Returns a survey by ID with all its questions and options.",
        "operationId": "getSurveyById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of survey to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SurveyDetail"
            }
          },
          "404": {
            "description": "Survey not found"
          }
        }
      },
      "put": {
        "tags": [
          "surveys"
        ],
        "summary": "Update survey",
        "description": "Updates a survey by ID (only by author or admin).",
        "operationId": "updateSurvey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of survey to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Survey data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "is_active": {
                  "type": "boolean"
                },
                "require_login": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/SurveySummary"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Survey not found"
          }
        }
      },
      "delete": {
        "tags": [
          "surveys"
        ],
        "summary": "Delete survey",
        "description": "Deletes a survey by ID (only by author or admin).",
        "operationId": "deleteSurvey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of survey to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Survey deleted successfully"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Survey not found"
          }
        }
      }
    },
    "/answers": {
      "get": {
        "tags": [
          "answers"
        ],
        "summary": "Get accessible answers",
        "description": "Returns a list of answers filtered by access rights.",
        "operationId": "getAnswers",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnswerDetail"
              }
            }
          }
        }
      }
    },
    "/answers/{id}": {
      "get": {
        "tags": [
          "answers"
        ],
        "summary": "Get answer by ID",
        "description": "Returns an answer by ID (with access control).",
        "operationId": "getAnswerById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of answer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnswerDetail"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Answer not found"
          }
        }
      },
      "put": {
        "tags": [
          "answers"
        ],
        "summary": "Update answer",
        "description": "Updates an answer by ID (with access control).",
        "operationId": "updateAnswer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of answer to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Answer data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "text_response": {
                  "type": "string"
                },
                "selected_options": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnswerDetail"
            }
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Answer not found"
          }
        }
      },
      "delete": {
        "tags": [
          "answers"
        ],
        "summary": "Delete answer",
        "description": "Deletes an answer by ID (with access control).",
        "operationId": "deleteAnswer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of answer to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Answer deleted successfully"
          },
          "403": {
            "description": "Access denied"
          },
          "404": {
            "description": "Answer not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "is_admin": {
          "type": "boolean"
        }
      }
    },
    "SurveySummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "is_active": {
          "type": "boolean"
        },
        "require_login": {
          "type": "boolean"
        }
      }
    },
    "SurveyDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "is_active": {
          "type": "boolean"
        },
        "require_login": {
          "type": "boolean"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Question"
          }
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": [
            "text",
            "word",
            "string",
            "single_choice",
            "multiple_choice",
            "limited_choice",
            "file"
          ]
        },
        "text": {
          "type": "string"
        },
        "is_required": {
          "type": "boolean"
        },
        "choice_limit": {
          "type": "integer"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    },
    "Option": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "AnswerDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "format": "int64"
        },
        "question_id": {
          "type": "integer",
          "format": "int64"
        },
        "text_response": {
          "type": "string"
        },
        "file_path": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "ip_address": {
          "type": "string"
        },
        "browser": {
          "type": "string"
        },
        "device_type": {
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "selected_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    }
  }
} 